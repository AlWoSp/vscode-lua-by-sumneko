{"config.awakened.cat":"PLAY WITH ME >_<\u000a\u000a(This will enable the beta version which is still in development. Feedback is welcome! Reload the window after changing this option!)","config.color.mode":"Color mode.","config.color.mode.Grammar":"Grammar color.","config.color.mode.Semantic":"Semantic color (Testing. Your color theme must support semantic coloring to be effective.).","config.completion.callSnippet":"Shows function call snippets.","config.completion.callSnippet.Both":"Shows `function name` and `call snippet`.","config.completion.callSnippet.Disable":"Only shows `function name`.","config.completion.callSnippet.Replace":"Only shows `call snippet.`","config.completion.enable":"Enable completion.","config.completion.keywordSnippet":"Shows keyword syntax snippets.","config.completion.keywordSnippet.Both":"Shows `keyword` and `syntax snippet`.","config.completion.keywordSnippet.Disable":"Only shows `keyword`.","config.completion.keywordSnippet.Replace":"Only shows `syntax snippet`.","config.develop.debuggerPort":"Listen port of debugger.","config.develop.debuggerWait":"Suspend before debugger connects.","config.develop.enable":"Developer mode. Do not enable, performance will be affected.","config.diagnostics.disable":"Disabled diagnostic (Use code in hover brackets).\u000a```json\u000a\"Lua.diagnostics.disable\" : [\u000a    \"unused-local\",\u000a    \"lowercase-global\"\u000a]\u000a```\u000a","config.diagnostics.enable":"Enable diagnostics.","config.diagnostics.globals":"Defined global variables.\u000a```json\u000a\"Lua.diagnostics.globals\" : [\u000a    \"GLOBAL1\",\u000a    \"GLOBAL2\"\u000a]\u000a```\u000a","config.diagnostics.severity":"Modified diagnostic severity.\u000a```json\u000a\"Lua.diagnostics.severity\" : {\u000a    \"redefined-local\" : \"Warning\",\u000a    \"emmy-lua\" : \"Hint\"\u000a}\u000a```\u000a","config.hover.enable":"Enable hover.","config.hover.viewNumber":"Hover to view numeric content (only if literal is not decimal).","config.hover.viewString":"Hover to view the contents of a string (only if the literal contains an escape character).","config.hover.viewStringMax":"The maximum length of a hover to view the contents of a string.","config.runtime.path":"`package.path`","config.runtime.version":"Lua runtime version.","config.signatureHelp.enable":"Enable signature help.","config.workspace.ignoreDir":"Ignored directories (Use `.gitignore` grammar).\u000a```json\u000a\"Lua.workspace.ignoreDir\" : [\u000a    \"temp\/*.*\",\u000a    \"!temp\/*.lua\"\u000a]\u000a```\u000a","config.workspace.ignoreSubmodules":"Ignore submodules.","config.workspace.library":"Load external library.\u000aThis feature can load external Lua files, which can be used for definition, automatic completion and other functions. Note that the language server does not monitor changes in external files and needs to restart if the external files are modified.\u000aThe following example shows loaded files in `C:\/lua` and `..\/lib` ,exclude `..\/lib\/temp`.\u000a```json\u000a\"Lua.workspace.library\": {\u000a    \"C:\/lua\": true,\u000a    \"..\/lib\": [\u000a        \"temp\/*\"\u000a    ]\u000a}\u000a```\u000a","config.workspace.maxPreload":"Max preloaded files.","config.workspace.preloadFileSize":"Skip files larger than this value (KB) when preloading.","config.workspace.useGitIgnore":"Ignore files list in `.gitignore` ."}